name: Build and Generate Swagger JSON

on:
  push:
    branches:
      - master
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: sorigalpi
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK  11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Spring Boot application
        run: ./gradlew bootRun --no-daemon &
        continue-on-error: false

      - name: Wait for server to start
        run: |
          timeout=100
          while ! nc -z localhost  8080; do
            sleep  1
            ((timeout--))
            if [[ $timeout ==  0 ]]; then
              echo "Server did not start within  100 seconds"
              exit  1
            fi
          done
      - name: Download file with retry for swagger.json
        run: |
          start_time=$(date +%s)
          timeout_seconds=600 # Set your desired timeout here, e.g.,  600 seconds for  10 minutes
          max_retries=5 # Maximum number of retries
          retry_delay=5 # Delay between retries in seconds
          success=false

          for (( i=0; i<$max_retries; i++ )); do
          current_time=$(date +%s)
          elapsed_time=$((current_time - start_time))
          if [ $elapsed_time -ge $timeout_seconds ]; then
           echo "Timeout reached. Exiting."
           exit  1
          fi
               
          response=$(curl -s -o swagger.json -w "%{http_code}" http://localhost:8080/v3/api-docs)
          size=$(du -b swagger.json | cut -f1)
          http_status=$?

          if [[ "$size" -gt  0 ]] && [[ "$http_status" != "404" ]]; then
           success=true
           break
          fi

          echo "Download failed. Retrying in $retry_delay seconds..."
          sleep $retry_delay
          done

          if [ "$success" = false ]; then
          echo "Failed to download after $max_retries attempts and $timeout_seconds seconds."
          exit  1
          fi

          echo "File downloaded successfully."

      - name: Configure Git User
        run: |
          git config --global user.email "yeji1814@gmail.com"
          git config --global user.name "remonpie1814"

      - name: Clone repo and copy file
        run: |
          git clone https://github.com/remonpie1814/test_swagger.git

      - name: Copy swagger.json
        run: |
          cp swagger.json test_swagger/

      - name: Check for changes
        id: changes
        run: |
          if diff -q file1.txt file2.txt; then
            echo "changed=true" >> $GITHUB_STATE
          fi

      - name: Commit and push
        if: env.STATE_changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_COMMIT }}
        run: |
          cd test_swagger
          git remote add ui-repo https://${GITHUB_TOKEN}@github.com/remonpie1814/test_swagger.git
          git add swagger.json
          git commit -m "Update Swagger"
          git push -f ui-repo main

          
